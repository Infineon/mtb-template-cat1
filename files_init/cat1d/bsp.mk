################################################################################
# \file bsp.mk
#
# \brief
# Define the BSP for the PSE84 PSVP
#
################################################################################
# \copyright
# Copyright 2021-2022 Cypress Semiconductor Corporation (an Infineon company) or
# an affiliate of Cypress Semiconductor Corporation
#
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

ifeq ($(WHICHFILE),true)
$(info Processing $(lastword $(MAKEFILE_LIST)))
endif

# Any additional components to apply when using this board.
BSP_COMPONENTS:=

# Any additional defines to apply when using this board.
BSP_DEFINES:=

APPTYPE?=ram
DEVICE_MODE?=NON_SECURE
CORE?=CM33

ifeq ($(TOOLCHAIN),GCC_ARM)
# To pick up pse84_common.ld
LDFLAGS += -Xlinker -L $(MTB_TOOLS__TARGET_DIR)/COMPONENT_CM33/TOOLCHAIN_$(TOOLCHAIN)
else ifeq ($(TOOLCHAIN),ARM)
LDFLAGS += --undefined=__scatterload_copy
endif

# Specify the path to the linker script to use
ifeq ($(TOOLCHAIN),GCC_ARM)
    BSP_LINKER_SCRIPT_EXT:=ld
else ifeq ($(TOOLCHAIN),ARM)
    BSP_LINKER_SCRIPT_EXT:=sct
else ifeq ($(TOOLCHAIN),IAR)
    BSP_LINKER_SCRIPT_EXT:=icf
endif


ifeq ($(DEVICE_MODE),NON_SECURE)

ifeq ($(APPTYPE), ram)
MTB_BSP__LINKER_SCRIPT:=$(MTB_TOOLS__TARGET_DIR)/COMPONENT_$(CORE)/TOOLCHAIN_$(TOOLCHAIN)/pse84_ns_ram.$(BSP_LINKER_SCRIPT_EXT)
else
MTB_BSP__LINKER_SCRIPT:=$(MTB_TOOLS__TARGET_DIR)/COMPONENT_$(CORE)/TOOLCHAIN_$(TOOLCHAIN)/linker.$(BSP_LINKER_SCRIPT_EXT)
endif

BSP_SECURE_COMPONENT+=NON_SECURE_DEVICE
else
MTB_BSP__LINKER_SCRIPT:=$(MTB_TOOLS__TARGET_DIR)/COMPONENT_$(CORE)/TOOLCHAIN_$(TOOLCHAIN)/pse84_s_$(APPTYPE).$(BSP_LINKER_SCRIPT_EXT)
BSP_SECURE_COMPONENT+=SECURE_DRIVERS SECURE_DEVICE
endif
#Add secure component(s) directly to components until PLATTOOLS-10989 is resolved
COMPONENTS+=$(BSP_SECURE_COMPONENT)

#Generate binary image
ifeq ($(TOOLCHAIN),ARM)
CY_BSP_POSTBUILD+=$(MTB_TOOLCHAIN_ARM__BASE_DIR)/bin/fromelf --output=$(MTB_TOOLS__OUTPUT_CONFIG_DIR)/$(APPNAME).bin --bincombined $(MTB_TOOLS__OUTPUT_CONFIG_DIR)/$(APPNAME).$(MTB_RECIPE__SUFFIX_TARGET);
else
CY_BSP_POSTBUILD+=$(MTB_TOOLCHAIN_GCC_ARM__BASE_DIR)/bin/arm-none-eabi-objcopy -O binary $(MTB_TOOLS__OUTPUT_CONFIG_DIR)/$(APPNAME).$(MTB_RECIPE__SUFFIX_TARGET) $(MTB_TOOLS__OUTPUT_CONFIG_DIR)/$(APPNAME).bin;
endif

# Path to the flash loaders to patch for this board
CY_QSPI_FLM_DIR=$(MTB_TOOLS__TARGET_DIR)/config/FlashLoaders/

# Path to the patched flash loaders for this board
CY_QSPI_FLM_DIR_OUTPUT=$(MTB_TOOLS__TARGET_DIR)/config/GeneratedSource/
################################################################################
# ALL ITEMS BELOW THIS POINT ARE AUTO GENERATED BY THE BSP ASSISTANT TOOL.
# DO NOT MODIFY DIRECTLY. CHANGES SHOULD BE MADE THROUGH THE BSP ASSISTANT.
################################################################################